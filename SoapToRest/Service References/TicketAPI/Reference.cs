//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapToRest.TicketAPI {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/InterfaceBootcamp")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DriversLicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatuteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TicketDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TicketNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ViolationDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriversLicenseNumber {
            get {
                return this.DriversLicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DriversLicenseNumberField, value) != true)) {
                    this.DriversLicenseNumberField = value;
                    this.RaisePropertyChanged("DriversLicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatuteCode {
            get {
                return this.StatuteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatuteCodeField, value) != true)) {
                    this.StatuteCodeField = value;
                    this.RaisePropertyChanged("StatuteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TicketDate {
            get {
                return this.TicketDateField;
            }
            set {
                if ((this.TicketDateField.Equals(value) != true)) {
                    this.TicketDateField = value;
                    this.RaisePropertyChanged("TicketDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketID {
            get {
                return this.TicketIDField;
            }
            set {
                if ((this.TicketIDField.Equals(value) != true)) {
                    this.TicketIDField = value;
                    this.RaisePropertyChanged("TicketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TicketNumber {
            get {
                return this.TicketNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketNumberField, value) != true)) {
                    this.TicketNumberField = value;
                    this.RaisePropertyChanged("TicketNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ViolationDesc {
            get {
                return this.ViolationDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ViolationDescField, value) != true)) {
                    this.ViolationDescField = value;
                    this.RaisePropertyChanged("ViolationDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TicketAPI.ITicketAPI")]
    public interface ITicketAPI {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/getNewTickets", ReplyAction="http://tempuri.org/ITicketAPI/getNewTicketsResponse")]
        SoapToRest.TicketAPI.Ticket[] getNewTickets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/getNewTickets", ReplyAction="http://tempuri.org/ITicketAPI/getNewTicketsResponse")]
        System.Threading.Tasks.Task<SoapToRest.TicketAPI.Ticket[]> getNewTicketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/resetTickets", ReplyAction="http://tempuri.org/ITicketAPI/resetTicketsResponse")]
        bool resetTickets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/resetTickets", ReplyAction="http://tempuri.org/ITicketAPI/resetTicketsResponse")]
        System.Threading.Tasks.Task<bool> resetTicketsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/getTicketUpdates", ReplyAction="http://tempuri.org/ITicketAPI/getTicketUpdatesResponse")]
        SoapToRest.TicketAPI.Ticket[] getTicketUpdates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketAPI/getTicketUpdates", ReplyAction="http://tempuri.org/ITicketAPI/getTicketUpdatesResponse")]
        System.Threading.Tasks.Task<SoapToRest.TicketAPI.Ticket[]> getTicketUpdatesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITicketAPIChannel : SoapToRest.TicketAPI.ITicketAPI, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TicketAPIClient : System.ServiceModel.ClientBase<SoapToRest.TicketAPI.ITicketAPI>, SoapToRest.TicketAPI.ITicketAPI {
        
        public TicketAPIClient() {
        }
        
        public TicketAPIClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TicketAPIClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketAPIClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TicketAPIClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SoapToRest.TicketAPI.Ticket[] getNewTickets() {
            return base.Channel.getNewTickets();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.TicketAPI.Ticket[]> getNewTicketsAsync() {
            return base.Channel.getNewTicketsAsync();
        }
        
        public bool resetTickets() {
            return base.Channel.resetTickets();
        }
        
        public System.Threading.Tasks.Task<bool> resetTicketsAsync() {
            return base.Channel.resetTicketsAsync();
        }
        
        public SoapToRest.TicketAPI.Ticket[] getTicketUpdates() {
            return base.Channel.getTicketUpdates();
        }
        
        public System.Threading.Tasks.Task<SoapToRest.TicketAPI.Ticket[]> getTicketUpdatesAsync() {
            return base.Channel.getTicketUpdatesAsync();
        }
    }
}
